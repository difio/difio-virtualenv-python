monupco.com registration agent for stand-alone Python virtualenv
applications.

It compiles a list of locally installed Python packages and sends it to
monupco.com.


Installing inside your virtualenv
---------------------------------

* Create an account at <http://monupco.com>

* Activate your virtualenv

  * if you're using ``virtualenvwrapper`` then simply::

      workon myapp

  * if you're not using ``virtualenvwrapper`` then something like this will work::

      cd ~/.virtualenvs/myapp/
      source bin/activate

* Install this package

::

    pip install monupco-virtualenv-python

* Create a script which will contain your configuration values and register the application with Monupco when executed. It should look something like this:

::

    #!/bin/bash
    export MONUPCO_USER_ID=YourUserID
    export MONUPCO_UUID=APP-UUID
    $VIRTUAL_ENV/bin/monupco-virtualenv-python

**NOTE**:
 * You can find your Monupco userID at https://monupco-otb.rhcloud.com/profiles/mine/.
 * Replace ``APP-UUID`` with a unique value, for example generated by the ``uuidgen`` program!

* Make this script executable

::

    chmod a+x $VIRTUAL_ENV/path/to/registration_script

* If you wish, you can configure ``$VIRTUAL_ENV/bin/postactivate`` hook to call the registration script every time when the virtualenv is activated

::

    echo "\$VIRTUAL_ENV/path/to/registration_script" >> $VIRTUAL_ENV/bin/postactivate
    chmod a+x $VIRTUAL_ENV/bin/postactivate


* Execute the registration script to register the application. 

::

    $VIRTUAL_ENV/path/to/registration_script

**NOTE**: You will have to do this every time when you install/remove or upgrade packages in the virtualenv.
Optionally you can configure a cron job to do this automatically.

* If everything goes well you should see something like:

::

    Monupco: Success, registered/updated application with id 49

That's it, you can now check your application statistics at
<http://monupco.com>


Notes
-----

* Monupco will use the basepath of your virtualenv as the application name. To override use environment variable ``MONUPCO_APP_NAME``;
* Application type is "python" followed by the interpreter version;
* Application URL is the system hostname prepended with http://.  To override use environment variable ``MONUPCO_APP_URL`` including the protocol string.
